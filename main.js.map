{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./projects/map-district-selector/src/lib/components/panel/panel.component.ts","./projects/map-district-selector/src/lib/components/panel/panel.component.html","./projects/map-district-selector/src/lib/components/panel/panel.module.ts","./projects/map-district-selector/src/lib/map-district-selector.module.ts","./projects/map-district-selector/src/lib/map-district-selector.service.ts","./projects/map-district-selector/src/lib/map-district-selector.token.ts","./projects/map-district-selector/src/lib/map-district-selector.types.ts","./projects/map-district-selector/src/lib/utils/read-json/read-json.module.ts","./projects/map-district-selector/src/lib/utils/read-json/read-json.service.ts","./projects/map-district-selector/src/public-api.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, ViewChild, ElementRef, Inject, AfterViewInit, OnDestroy, HostListener, ChangeDetectorRef } from '@angular/core';\r\nimport { ReadJsonService } from '../../utils/read-json/read-json.service';\r\nimport { fromEvent, Subject, zip, of } from 'rxjs';\r\nimport { MAP_DISTRICT_SELECTOR_CLOSE_FUNC_TOKEN } from '../../map-district-selector.token';\r\nimport { GeoDataType, MapTheme, MapSelectResult, MUNICIPALITIES, HAINAN } from '../../map-district-selector.types';\r\nimport { tap, map, startWith } from 'rxjs/operators';\r\nimport { ECharts, EChartOption } from 'echarts';\r\nimport * as echarts from 'echarts';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'mds-panel',\r\n  templateUrl: './panel.component.html',\r\n  styleUrls: ['./panel.component.scss']\r\n})\r\nexport class PanelComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild('mapChart') mapChart: ElementRef;\r\n  searchControl = new FormControl();\r\n  searchOptions: any = [];\r\n  searchPlaceholder = ['请输入您要查找的省市', '请输入您要查找的地区'];\r\n  chartInit$ = new Subject<boolean>();\r\n  loading = true;\r\n  chart: ECharts;\r\n  title = '';\r\n  mapLevel = 0;\r\n  cityType: 'Normal' | 'Municipality' = 'Normal';\r\n  cityList: any[] = [];\r\n  municipalityCityList: any[] = [];\r\n  options: any = {\r\n    series: [\r\n      {\r\n        type: 'map',\r\n        map: 'China',\r\n        roam: true,\r\n        zoom: 1.2,\r\n        aspectScale: 0.75,\r\n        selectedMode: 'single',\r\n        ...new MapTheme({\r\n          areaColor: '#e0ece4',\r\n          emphasisAreaColor: '#ff4b5c',\r\n          labelColor: '#66bfbf',\r\n          emphasisLabelColor: '#056674',\r\n        })\r\n      },\r\n    ]\r\n  };\r\n  result = new MapSelectResult();\r\n  @HostListener('window:resize') resize(): void {\r\n    this.chart.resize();\r\n  }\r\n  constructor(\r\n    // tslint:disable-next-line: ban-types\r\n    @Inject(MAP_DISTRICT_SELECTOR_CLOSE_FUNC_TOKEN) public closeFn: Function,\r\n    private readJson: ReadJsonService,\r\n    private $cdRef: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    zip(\r\n      this.chartInit$.pipe(tap(() => this.initChart())),\r\n      this.readJson.readJson('china')\r\n    ).subscribe(([_, ChinaJson]) => {\r\n      this.loading = false;\r\n      this.renderChina(ChinaJson);\r\n      this.initSearchOptions();\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.chartInit$.next(true);\r\n    this.$cdRef.detectChanges();\r\n  }\r\n\r\n  private initSearchOptions(): void {\r\n    this.searchControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this.filterSearch(value))\r\n    ).subscribe(e => this.searchOptions = e);\r\n  }\r\n\r\n  private filterSearch(value: string): any {\r\n    const filterValue = value.trim().toLowerCase();\r\n    if (!filterValue) {\r\n      return [];\r\n    }\r\n    let options = [];\r\n    switch (this.mapLevel) {\r\n      case 0:\r\n        options = this.options.series[0].data;\r\n        break;\r\n      case 1:\r\n        options = JSON.parse(JSON.stringify(this.cityList)).reduce((p, c) => {\r\n          p.push(c);\r\n          if (c.children.length) {\r\n            p.push(...c.children.map(child => {\r\n              child.name = `${c.name}-${child.name}`;\r\n              return child;\r\n            }));\r\n          }\r\n          return p;\r\n        }, []);\r\n        break;\r\n    }\r\n    return options.filter(option => option.name && option.name.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  private initChart(): void {\r\n    this.chart = echarts.init(this.mapChart.nativeElement);\r\n    this.bindMapSelectChangedEvent();\r\n  }\r\n\r\n\r\n  private renderChina(ChinaJson): void {\r\n    this.chart.resize({\r\n      width: 860\r\n    });\r\n    this.resetMap('China', ChinaJson);\r\n    this.loading = false;\r\n  }\r\n\r\n  private fmtGeoData(data): any {\r\n    return data.features.map(g => g.properties);\r\n  }\r\n\r\n  private isMunicipality(adcode): boolean {\r\n    return MUNICIPALITIES.indexOf(+adcode) !== -1;\r\n  }\r\n\r\n  private isHainan(adcode): boolean {\r\n    return HAINAN === +adcode;\r\n  }\r\n\r\n  private bindMapSelectChangedEvent(): void {\r\n    fromEvent(this.chart, 'mapselectchanged')\r\n      .subscribe((param: any) => {\r\n        this.mapSelectChangedEventCallBack(param.batch[0].name);\r\n      });\r\n  }\r\n\r\n  mapSelectChangedEventCallBack(selectedName: string): void {\r\n    if (this.mapLevel === 1) {\r\n      const [cityName, districtName] = selectedName.split('-');\r\n      const city = this.cityList.find(c => c.name === cityName);\r\n      this.result.setCity({\r\n        adcode: +city.adcode,\r\n        name: city.name,\r\n      });\r\n      if (districtName) {\r\n        const district = city.children.find(d => d.name === districtName);\r\n        this.result.setDistrict({\r\n          adcode: +district.adcode,\r\n          name: district.name\r\n        });\r\n      }\r\n      this.close();\r\n      return;\r\n    }\r\n    this.searchControl.setValue('');\r\n    const selectData = ((this.options as EChartOption).series[0].data as EChartOption.SeriesMap.DataObject[])\r\n      .find((v) => v.name === selectedName) as GeoDataType;\r\n    if (!selectData) {\r\n      return;\r\n    }\r\n    const { level, adcode, name, center, childrenNum } = selectData;\r\n    if (level === 'province') {\r\n      this.result.setProvince({\r\n        adcode: +adcode,\r\n        name,\r\n        center\r\n      });\r\n      if (!childrenNum) {\r\n        this.close();\r\n        return;\r\n      }\r\n      if (this.isMunicipality(adcode)) {\r\n        this.result.setCity({\r\n          adcode: +adcode,\r\n          name,\r\n          center\r\n        });\r\n      }\r\n      this.loading = true;\r\n      this.mapLevel = 1;\r\n      this.chart.resize({\r\n        width: 430\r\n      });\r\n      this.renderCity(selectData);\r\n    }\r\n    if (level === 'city') {\r\n      this.result.setCity({\r\n        adcode: +adcode,\r\n        name\r\n      });\r\n      this.close();\r\n    }\r\n    if (level === 'district') {\r\n      this.result.setDistrict({\r\n        adcode: +adcode,\r\n        name\r\n      });\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  private renderCity({ level, adcode, center, name }: GeoDataType): void {\r\n    this.title = name;\r\n    this.readJson.readJson(`${level}/${adcode}`).subscribe(e => {\r\n      adcode = +adcode;\r\n      if (this.isMunicipality(adcode)) {\r\n        this.getMunicipalityDistrictList({ level, adcode, center, name }, e);\r\n      } else {\r\n        this.getDistrictList(e);\r\n      }\r\n      this.resetMap(name, e);\r\n    });\r\n  }\r\n\r\n  private getMunicipalityDistrictList({ level, adcode, center, name }, e): void {\r\n    this.cityType = 'Municipality';\r\n    this.cityList = [\r\n      {\r\n        level,\r\n        adcode,\r\n        center,\r\n        name,\r\n        children: e.features.map(({ properties }) => properties)\r\n      }\r\n    ];\r\n    this.loading = false;\r\n  }\r\n\r\n  private getDistrictList(e): void {\r\n    const observables = e.features.map(({ properties }: any) => {\r\n      return properties.childrenNum ? this.readJson.readJson(`${properties.level}/${properties.adcode}`) : of({ features: [] });\r\n    });\r\n    zip(...observables).pipe(\r\n      map(cities => cities.map(({ features }, i) => {\r\n        const { name, adcode, center, level } = e.features[i].properties;\r\n        return {\r\n          name,\r\n          adcode,\r\n          center,\r\n          level,\r\n          children: features.map(({ properties }) => properties)\r\n        };\r\n      }))\r\n    ).subscribe(list => {\r\n      this.cityType = 'Normal';\r\n      this.cityList = list;\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  private resetMap(name, data, center = null): void {\r\n    this.chart.clear();\r\n    echarts.registerMap(name, data);\r\n    (this.options.series[0] as EChartOption.SeriesMap).map = name;\r\n    this.options.series[0].data = this.fmtGeoData(data);\r\n    this.options.series[0].center = center;\r\n    this.chart.setOption(this.options, true);\r\n  }\r\n\r\n  hoverDistrict(city, district): void {\r\n    this.chart.setOption({\r\n      series: [{\r\n        zoom: 2,\r\n        center: district.center\r\n      }]\r\n    });\r\n    this.chart.dispatchAction({\r\n      type: 'mapSelect',\r\n      name: district.name\r\n    });\r\n    this.result.setCity({\r\n      adcode: city.adcode,\r\n      name: city.name\r\n    });\r\n  }\r\n\r\n  hoverCity({ center, name, adcode }): void {\r\n    this.chart.setOption({\r\n      series: [{\r\n        zoom: 2,\r\n        center\r\n      }]\r\n    });\r\n    this.chart.dispatchAction({\r\n      type: 'mapSelect',\r\n      name\r\n    });\r\n    this.result.setCity({\r\n      adcode,\r\n      name\r\n    });\r\n  }\r\n\r\n  leaveDistrict(clearCity = true): void {\r\n    this.chart.setOption({\r\n      series: [{\r\n        zoom: 1.2,\r\n        center: null\r\n      }]\r\n    });\r\n    if (this.result?.city?.name) {\r\n      this.chart.dispatchAction({\r\n        type: 'mapUnSelect',\r\n        name: this.result?.city?.name\r\n      });\r\n      if (clearCity) {\r\n        this.result.clear('city');\r\n      }\r\n      this.result.clear('district');\r\n    }\r\n  }\r\n\r\n  chooseCity(city): void {\r\n    this.result.setCity(city);\r\n    this.close();\r\n  }\r\n\r\n  chooseDistrict(district): void {\r\n    this.result.setDistrict(district);\r\n    this.close();\r\n  }\r\n\r\n  back(): void {\r\n    this.title = '';\r\n    this.loading = true;\r\n    this.mapLevel = 0;\r\n    this.cityList = [];\r\n    this.municipalityCityList = [];\r\n    this.readJson.readJson('china').subscribe(ChinaJson => this.renderChina(ChinaJson));\r\n  }\r\n\r\n  close(isOutputResult = true): void {\r\n    this.closeFn(isOutputResult ? this.result.getResult() : null);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.chartInit$.complete();\r\n  }\r\n}\r\n","<div class=\"top\">\r\n  <div class=\"label\">{{title || '请选择省份'}}</div>\r\n  <div class=\"search\">\r\n    <input type=\"text\" [placeholder]=\"searchPlaceholder[mapLevel]\" matInput [formControl]=\"searchControl\"\r\n      [matAutocomplete]=\"auto\">\r\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"mapSelectChangedEventCallBack($event.option.value)\">\r\n      <mat-option *ngFor=\"let option of searchOptions\" [value]=\"option.name\">\r\n        {{option.name}}</mat-option>\r\n    </mat-autocomplete>\r\n  </div>\r\n  <button mat-flat-button color=\"primary\" class=\"back\" (click)=\"back()\" *ngIf=\"mapLevel !== 0\">返回</button>\r\n  <div class=\"close\" (click)=\"close(false)\">×</div>\r\n</div>\r\n<div class=\"main\">\r\n  <div #mapChart class=\"map\" [class.city]=\"mapLevel === 1\"></div>\r\n  <ng-container *ngIf=\"mapLevel === 1 && cityList.length\">\r\n    <ng-container [ngSwitch]=\"cityType\">\r\n      <div class=\"district-list\" *ngSwitchCase=\"'Municipality'\">\r\n        <div class=\"city-container municipality\" *ngFor=\"let city of cityList\">\r\n          <div class=\"title\" (click)=\"chooseCity(city)\">{{city.name}}</div>\r\n          <div class=\"subtitle-container\">\r\n            <div class=\"subtitle\" *ngFor=\"let district of city.children\" (mouseenter)=\"hoverDistrict(city, district)\"\r\n              (mouseleave)=\"leaveDistrict(false)\" (click)=\"chooseDistrict(district)\">\r\n              {{district.name}}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"district-list\" *ngSwitchDefault (mouseleave)=\"leaveDistrict()\">\r\n        <div class=\"city-container\" *ngFor=\"let city of cityList\" (mouseenter)=\"hoverCity(city)\">\r\n          <div class=\"title\" (click)=\"chooseCity(city)\">{{city.name}}</div>\r\n          <div class=\"subtitle-container\">\r\n            <div class=\"subtitle\" *ngFor=\"let district of city.children\" (click)=\"chooseDistrict(district)\">\r\n              {{district.name}}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  </ng-container>\r\n  <div class=\"loading\" *ngIf=\"loading\">Loading...</div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PanelComponent } from './panel.component';\r\nimport { ReadJsonModule } from '../../utils/read-json/read-json.module';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReadJsonModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [PanelComponent],\r\n  exports: [PanelComponent],\r\n  entryComponents: [PanelComponent],\r\n})\r\nexport class MDSPanelModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { MapDistrictSelectorService } from './map-district-selector.service';\r\nimport { MDSPanelModule } from './components/panel/panel.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    OverlayModule,\r\n    MDSPanelModule\r\n  ],\r\n  providers: [\r\n    MapDistrictSelectorService\r\n  ]\r\n})\r\nexport class MapDistrictSelectorModule { }\r\n","import { Injectable, ViewContainerRef, Injector } from '@angular/core';\r\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { PanelComponent } from './components/panel/panel.component';\r\nimport { OverlayOptions, MapSelectResultType } from './map-district-selector.types';\r\nimport { MAP_DISTRICT_SELECTOR_CLOSE_FUNC_TOKEN } from './map-district-selector.token';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class MapDistrictSelectorService {\r\n  afterClose$ = new Subject<MapSelectResultType>();\r\n  private overlayRef: OverlayRef;\r\n  constructor(\r\n    public overlay: Overlay,\r\n    private injector: Injector\r\n  ) { }\r\n\r\n  open(options: ViewContainerRef | OverlayOptions): Promise<MapSelectResultType> {\r\n    if (options instanceof ViewContainerRef) {\r\n      options = { viewContainerRef: options };\r\n    }\r\n    const { viewContainerRef, hasBackdrop, disableClose } = options;\r\n    const config = new OverlayConfig();\r\n    config.positionStrategy = this.overlay.position()\r\n      .global()\r\n      .centerHorizontally()\r\n      .centerVertically();\r\n    config.hasBackdrop = hasBackdrop == null ? true : hasBackdrop;\r\n    this.overlayRef = this.overlay.create(config);\r\n    if (disableClose == null ? disableClose : !disableClose) {\r\n      this.overlayRef.backdropClick().subscribe(() => {\r\n        this.close();\r\n      });\r\n    }\r\n    this.overlayRef.attach(\r\n      new ComponentPortal(\r\n        PanelComponent, viewContainerRef, Injector.create({\r\n          providers: [{\r\n            provide: MAP_DISTRICT_SELECTOR_CLOSE_FUNC_TOKEN,\r\n            useValue: this.close.bind(this)\r\n          }],\r\n          parent: this.injector\r\n        })\r\n      )\r\n    );\r\n    return new Promise(res => {\r\n      this.afterClose$.subscribe(e => res(e));\r\n    });\r\n  }\r\n\r\n  close(result = null): void {\r\n    this.overlayRef.dispose();\r\n    if (result != null) {\r\n      this.afterClose$.next(result);\r\n    }\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const MAP_DISTRICT_SELECTOR_CLOSE_FUNC_TOKEN = new InjectionToken('MAP_DISTRICT_SELECTOR_CLOSE_FUNC_TOKEN');\r\n\r\nexport const GEO_JSON_API_PATH = new InjectionToken<{}>('GEO_JSON_API_PATH');\r\n","import { ViewContainerRef } from '@angular/core';\r\n\r\nexport type OverlayOptions = {\r\n    viewContainerRef: ViewContainerRef,\r\n    hasBackdrop?: boolean,\r\n    disableClose?: boolean\r\n};\r\n\r\nexport type GeoDataType = {\r\n    adcode?: number,\r\n    level?: string,\r\n    name?: string,\r\n    childrenNum?: number,\r\n    center?: number[]\r\n};\r\n\r\n\r\nexport type MapSelectResultType = {\r\n    province: GeoDataType,\r\n    city: GeoDataType,\r\n    district: GeoDataType\r\n};\r\n\r\nexport class MapTheme {\r\n    constructor({ labelColor, areaColor, emphasisLabelColor, emphasisAreaColor }) {\r\n        return {\r\n            label: {\r\n                show: true,\r\n                color: labelColor,\r\n            },\r\n            itemStyle: {\r\n                areaColor,\r\n                borderColor: '#000',\r\n                borderType: 'solid',\r\n            },\r\n            emphasis: {\r\n                label: {\r\n                    show: true,\r\n                    color: emphasisLabelColor,\r\n                    fontWeight: 'bold'\r\n                },\r\n                itemStyle: {\r\n                    areaColor: emphasisAreaColor\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nexport class MapSelectResult {\r\n    constructor(\r\n        public province: GeoDataType = null,\r\n        public city: GeoDataType = null,\r\n        public district: GeoDataType = null\r\n    ) { }\r\n\r\n    private fmtData(data: GeoDataType): any {\r\n        return data ? { name: data.name, adcode: data.adcode } : null;\r\n    }\r\n\r\n    setProvince(province): void {\r\n        this.province = { ...province };\r\n    }\r\n    setCity(city): void {\r\n        this.city = { ...city };\r\n    }\r\n    setDistrict(district): void {\r\n        this.district = { ...district };\r\n    }\r\n\r\n    clear(type: 'province' | 'city' | 'district'): void {\r\n        this[type] = null;\r\n    }\r\n\r\n    getResult(): MapSelectResultType {\r\n        return {\r\n            province: this.fmtData(this.province),\r\n            city: this.fmtData(this.city),\r\n            district: this.fmtData(this.district)\r\n        };\r\n    }\r\n}\r\n\r\nexport const MUNICIPALITIES = [\r\n    110000, // 北京\r\n    120000, // 天津\r\n    500000, // 重庆\r\n    310000, // 上海\r\n    810000, // 香港\r\n    820000, // 澳门\r\n];\r\n\r\nexport const HAINAN = 460000;\r\n","import { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReadJsonService } from './read-json.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    HttpClientModule\r\n  ],\r\n  providers: [ReadJsonService]\r\n})\r\nexport class ReadJsonModule { }\r\n","import { Injectable, Inject, Optional } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { GEO_JSON_API_PATH } from '../../map-district-selector.token';\r\n\r\n@Injectable()\r\nexport class ReadJsonService {\r\n  private cache: any = {};\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject(GEO_JSON_API_PATH) private path: string\r\n  ) { }\r\n\r\n  readJson(fileName): Observable<any> {\r\n    if (this.cache[fileName]) {\r\n      return of(this.cache[fileName]);\r\n    }\r\n    return this.http.get(`${this.path}/${fileName}.json`).pipe(tap(json => this.cache[fileName] = json));\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of map-district-selector\r\n */\r\n\r\nexport * from './lib/map-district-selector.service';\r\nexport * from './lib/map-district-selector.module';\r\nexport * from './lib/map-district-selector.token';\r\nexport * from './lib/map-district-selector.types';\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ViewChild, ViewContainerRef } from '@angular/core';\nimport { MapDistrictSelectorService, MapSelectResultType } from 'projects/map-district-selector/src/public-api';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'map-district-selector-doc';\n  selectedData: MapSelectResultType;\n\n  constructor(\n    private helper: MapDistrictSelectorService,\n    public viewContainerRef: ViewContainerRef\n  ) { }\n\n  open(): void {\n    this.helper.open(this.viewContainerRef).then(e => {\n      this.selectedData = e;\n      console.log(e);\n    });\n  }\n}\n","<button (click)=\"open()\">打开</button>\r\n<div>省：{{selectedData?.province?.name}} -- {{selectedData?.province?.adcode}}</div>\r\n<div>市：{{selectedData?.city?.name}} -- {{selectedData?.city?.adcode}}</div>\r\n<div>区：{{selectedData?.district?.name}} -- {{selectedData?.district?.adcode}}</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { MapDistrictSelectorModule } from 'projects/map-district-selector/src/public-api';\r\nimport { GEO_JSON_API_PATH } from 'projects/map-district-selector/src/lib/map-district-selector.token';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MapDistrictSelectorModule\r\n  ],\r\n  providers: [\r\n    { provide: GEO_JSON_API_PATH, useValue: 'assets' }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}